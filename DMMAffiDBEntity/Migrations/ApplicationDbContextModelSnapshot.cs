// <auto-generated />
using System;
using System.Text.Json;
using DMMAffiDBEntity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DMMAffiDBEntity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DMMAffiDBEntity.Entities.Master.MAffiliateUser", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasComment("アフィリエイトユーザマスタID:【値例】1");

                    b.Property<string>("AIPId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("api_id")
                        .HasComment("APIID:【値例】");

                    b.Property<string>("AffiliateId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("affiliate_id")
                        .HasComment("アフィリエイトID:【値例】");

                    b.Property<string>("CreateProgram")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("create_program")
                        .HasComment("作成プログラム:【値例】System");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("create_user")
                        .HasComment("作成者:【値例】System");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_date")
                        .HasComment("作成日時:【値例】2025/01/01 00:00:00");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasComment("論理削除:【値例】false：未削除 , true：削除済み");

                    b.Property<string>("UpdateProgram")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("update_program")
                        .HasComment("更新プログラム:【値例】System");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("update_user")
                        .HasComment("更新者:【値例】System");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("update_date")
                        .HasComment("更新日時:【値例】2025/01/01 00:00:00");

                    b.HasKey("Id")
                        .HasName("m_affiliate_user_PKC");

                    b.ToTable("m_affiliate_user", t =>
                        {
                            t.HasComment("アフィリエイトユーザマスタ");
                        });
                });

            modelBuilder.Entity("DMMAffiDBEntity.Entities.Master.MFloor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("serial")
                        .HasColumnName("id")
                        .HasComment("フロアマスタID");

                    b.Property<string>("CreateProgram")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("create_program")
                        .HasComment("作成プログラム:【値例】System");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("create_user")
                        .HasComment("作成者:【値例】System");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_date")
                        .HasComment("作成日時:【値例】2025/01/01 00:00:00");

                    b.Property<string>("FloorCode")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("floor_code")
                        .HasComment("フロアコード:【値例】");

                    b.Property<int>("FloorId")
                        .HasColumnType("integer")
                        .HasColumnName("floor_id")
                        .HasComment("フロアID:【値例】1");

                    b.Property<string>("FloorName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("floor_name")
                        .HasComment("フロア名:【値例】");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasComment("論理削除:【値例】false：未削除 , true：削除済み");

                    b.Property<int>("ServiceId")
                        .HasColumnType("integer")
                        .HasColumnName("m_service_id")
                        .HasComment("サービスマスタID:【値例】1");

                    b.Property<int>("SiteId")
                        .HasColumnType("integer")
                        .HasColumnName("m_site_id")
                        .HasComment("サイトマスタID:【値例】1");

                    b.Property<string>("UpdateProgram")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("update_program")
                        .HasComment("更新プログラム:【値例】System");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("update_user")
                        .HasComment("更新者:【値例】System");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("update_date")
                        .HasComment("更新日時:【値例】2025/01/01 00:00:00");

                    b.HasKey("Id")
                        .HasName("m_floor_PKC");

                    b.ToTable("m_floor", t =>
                        {
                            t.HasComment("フロアマスタ");
                        });
                });

            modelBuilder.Entity("DMMAffiDBEntity.Entities.Master.MGenre", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("serial")
                        .HasColumnName("id")
                        .HasComment("ジャンルマスタID:【値例】1");

                    b.Property<string>("CreateProgram")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("create_program")
                        .HasComment("作成プログラム:【値例】System");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("create_user")
                        .HasComment("作成者:【値例】System");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_date")
                        .HasComment("作成日時:【値例】2025/01/01 00:00:00");

                    b.Property<int>("FloorId")
                        .HasColumnType("integer")
                        .HasColumnName("m_floor_id")
                        .HasComment("フロアマスタID:【値例】1");

                    b.Property<int>("GenreId")
                        .HasColumnType("integer")
                        .HasColumnName("genre_id")
                        .HasComment("ジャンルID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasComment("論理削除:【値例】false：未削除 , true：削除済み");

                    b.Property<string>("ListUrl")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("list_url")
                        .HasComment("リストページURL:アフィリエイトID付き");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("name")
                        .HasComment("ジャンル名称");

                    b.Property<string>("Ruby")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("ruby")
                        .HasComment("ジャンル名称(読み仮名)");

                    b.Property<string>("UpdateProgram")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("update_program")
                        .HasComment("更新プログラム:【値例】System");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("update_user")
                        .HasComment("更新者:【値例】System");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("update_date")
                        .HasComment("更新日時:【値例】2025/01/01 00:00:00");

                    b.HasKey("Id")
                        .HasName("m_genre_PKC");

                    b.ToTable("m_genre", t =>
                        {
                            t.HasComment("ジャンルマスタ");
                        });
                });

            modelBuilder.Entity("DMMAffiDBEntity.Entities.Master.MService", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("serial")
                        .HasColumnName("id")
                        .HasComment("サービスマスタID:【値例】1");

                    b.Property<string>("CreateProgram")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("create_program")
                        .HasComment("作成プログラム:【値例】System");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("create_user")
                        .HasComment("作成者:【値例】System");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_date")
                        .HasComment("作成日時:【値例】2025/01/01 00:00:00");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasComment("論理削除:【値例】false：未削除 , true：削除済み");

                    b.Property<string>("ServiceCode")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("service_code")
                        .HasComment("サービスコード:【値例】");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("service_name")
                        .HasComment("サービス名称:【値例】AKBグループ");

                    b.Property<string>("UpdateProgram")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("update_program")
                        .HasComment("更新プログラム:【値例】System");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("update_user")
                        .HasComment("更新者:【値例】System");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("update_date")
                        .HasComment("更新日時:【値例】2025/01/01 00:00:00");

                    b.HasKey("Id")
                        .HasName("m_service_PKC");

                    b.ToTable("m_service", t =>
                        {
                            t.HasComment("サービスマスタ");
                        });
                });

            modelBuilder.Entity("DMMAffiDBEntity.Entities.Master.MSite", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("serial")
                        .HasColumnName("id")
                        .HasComment("サイトマスタID:【値例】1");

                    b.Property<string>("CreateProgram")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("create_program")
                        .HasComment("作成プログラム:【値例】System");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("create_user")
                        .HasComment("作成者:【値例】System");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_date")
                        .HasComment("作成日時:【値例】2025/01/01 00:00:00");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasComment("論理削除:【値例】false：未削除 , true：削除済み");

                    b.Property<string>("SiteCode")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("site_code")
                        .HasComment("サイトコード");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("site_name")
                        .HasComment("サイト名称");

                    b.Property<string>("UpdateProgram")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("update_program")
                        .HasComment("更新プログラム:【値例】System");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("update_user")
                        .HasComment("更新者:【値例】System");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("update_date")
                        .HasComment("更新日時:【値例】2025/01/01 00:00:00");

                    b.HasKey("Id")
                        .HasName("m_site_PKC");

                    b.ToTable("m_site", t =>
                        {
                            t.HasComment("サイトマスタ");
                        });
                });

            modelBuilder.Entity("DMMAffiDBEntity.Entities.Transaction.TMasterManagement", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasComment("マスタ管理ID:【値例】1");

                    b.Property<string>("CreateProgram")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("create_program")
                        .HasComment("作成プログラム:【値例】System");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("create_user")
                        .HasComment("作成者:【値例】System");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_date")
                        .HasComment("作成日時:【値例】2025/01/01 00:00:00");

                    b.Property<DateTime>("MasterChangeDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("master_change_date")
                        .HasComment("マスタ更新日時:【値例】2025/04/01 00:00:00");

                    b.Property<string>("UpdateProgram")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("update_program")
                        .HasComment("更新プログラム:【値例】System");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("update_user")
                        .HasComment("更新者:【値例】System");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("update_date")
                        .HasComment("更新日時:【値例】2025/01/01 00:00:00");

                    b.HasKey("Id")
                        .HasName("t_mastar_management_PKC");

                    b.ToTable("t_master_management", t =>
                        {
                            t.HasComment("マスタ管理テーブル");
                        });
                });

            modelBuilder.Entity("DMMAffiDBEntity.Entities.Transaction.TProduct", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigserial")
                        .HasColumnName("id")
                        .HasComment("商品ID:【値例】1");

                    b.Property<string>("CreateProgram")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("create_program")
                        .HasComment("作成プログラム:【値例】System");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("create_user")
                        .HasComment("作成者:【値例】System");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_date")
                        .HasComment("作成日時:【値例】2025/01/01 00:00:00");

                    b.Property<JsonDocument>("ProductContent")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("product_content")
                        .HasComment("商品内容:【値例】");

                    b.Property<string>("UpdateProgram")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("update_program")
                        .HasComment("更新プログラム:【値例】System");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("update_user")
                        .HasComment("更新者:【値例】System");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("update_date")
                        .HasComment("更新日時:【値例】2025/01/01 00:00:00");

                    b.HasKey("Id")
                        .HasName("t_product_PKC");

                    b.ToTable("t_product", t =>
                        {
                            t.HasComment("商品テーブル");
                        });
                });

            modelBuilder.Entity("DMMAffiDBEntity.Entities.Transaction.TProductDetail", b =>
                {
                    b.Property<long>("TProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("t_product_id")
                        .HasComment("商品ID:【値例】1");

                    b.Property<string>("ContentId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("content_id")
                        .HasComment("商品ID:【値例】15dss00145");

                    b.Property<string>("CreateProgram")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("create_program")
                        .HasComment("作成プログラム:【値例】System");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("create_user")
                        .HasComment("作成者:【値例】System");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_date")
                        .HasComment("作成日時:【値例】2025/01/01 00:00:00");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("product_id")
                        .HasComment("品番ID:【値例】15dss00145dl");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("title")
                        .HasComment("タイトル:【値例】タイトル");

                    b.Property<string>("UpdateProgram")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("update_program")
                        .HasComment("更新プログラム:【値例】System");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("update_user")
                        .HasComment("更新者:【値例】System");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("update_date")
                        .HasComment("更新日時:【値例】2025/01/01 00:00:00");

                    b.HasKey("TProductId")
                        .HasName("t_product_detail_PKC");

                    b.ToTable("t_product_detail", t =>
                        {
                            t.HasComment("商品詳細テーブル");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
